package JavaGUI;

import BestandLezen.*;
import DatabaseConnectie.*;
import VindenORF.*;
import java.awt.*;
import java.util.*;
import java.util.logging.*;
import javax.swing.text.*;
import javax.swing.text.Highlighter.*;


/**
 *
 * @author Anne van Ewijk (bi2c) datum: 26-03-2017 In deze class word de
 * (eerste) GUI gemaakt. Ook worden TextAreas gemaakt en gevuld.
 *
 */
public class GUI extends javax.swing.JFrame {

    private ArrayList<Integer> idsORF;
    private ArrayList infoORF = new ArrayList();
    private String sequentie, header;

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        openButton.setEnabled(false);
        exportButtonORF.setEnabled(false);
        visualiseerButton.setEnabled(false);
        ophalenDatabaseButton.setEnabled(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titelTool = new javax.swing.JLabel();
        fileLabel = new javax.swing.JLabel();
        pathField = new javax.swing.JTextField();
        selectButton = new javax.swing.JButton();
        openButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        infoTextAreaORF = new javax.swing.JTextArea();
        exportButtonORF = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        importArea = new javax.swing.JTextArea();
        visualiseerButton = new javax.swing.JButton();
        importerenDatabase = new javax.swing.JLabel();
        doneExportLabel = new javax.swing.JLabel();
        ophalenDatabaseButton = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        label1 = new java.awt.Label();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        titelTool.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        titelTool.setText("ORF prediction tool");

        fileLabel.setText("file:");

        selectButton.setText("Select");
        selectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectButtonActionPerformed(evt);
            }
        });

        openButton.setText("Open");
        openButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openButtonActionPerformed(evt);
            }
        });

        infoTextAreaORF.setColumns(20);
        infoTextAreaORF.setRows(5);
        jScrollPane1.setViewportView(infoTextAreaORF);

        exportButtonORF.setText("Export ORF");
        exportButtonORF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportButtonORFActionPerformed(evt);
            }
        });

        importArea.setColumns(20);
        importArea.setRows(5);
        jScrollPane2.setViewportView(importArea);

        visualiseerButton.setText("Visualize ORF");
        visualiseerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visualiseerButtonActionPerformed(evt);
            }
        });

        importerenDatabase.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        importerenDatabase.setText("Import from database");

        ophalenDatabaseButton.setText("Import ORF");
        ophalenDatabaseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ophalenDatabaseButtonActionPerformed(evt);
            }
        });

        label1.setText("Enter accession code here:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(161, 161, 161)
                .addComponent(titelTool)
                .addGap(24, 24, 24))
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(fileLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pathField, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(selectButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(openButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
                            .addComponent(jScrollPane2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(importerenDatabase, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(visualiseerButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(exportButtonORF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(doneExportLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ophalenDatabaseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField1))))
                .addGap(0, 44, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(titelTool)
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pathField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fileLabel)
                            .addComponent(selectButton)
                            .addComponent(openButton))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(exportButtonORF)
                        .addGap(18, 18, 18)
                        .addComponent(doneExportLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(visualiseerButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(importerenDatabase)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(label1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ophalenDatabaseButton))
                .addGap(42, 42, 42))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     *
     * @param evt In deze methode verwijst hij naar BestandKiezen waar hij een
     * popup file maakt om te kiezen. De path van het aangeklikte bestand komt
     * in pathField te staan.
     */

    private void selectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectButtonActionPerformed
        BestandKiezen kies = new BestandKiezen();
        kies.kiezen();
        String path = kies.getPath();
        pathField.setText(path);
        openButton.setEnabled(true);
    }//GEN-LAST:event_selectButtonActionPerformed

    /**
     *
     * @param evt In deze methode verwijst hij naar de class LeesBestand waar
     * het bestand wordt in gelezen. Path wordt meegenomen naar LeesBestand,
     * omdat hij dan weet welk file hij moet lezen. De informatie over het file
     * worden in een textArea gezet.
     */
    private void openButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openButtonActionPerformed
        LeesBestand lees = new LeesBestand();
        try {
            lees.lezen(pathField.getText());
            sequentie = lees.getSequentie();
            header = lees.getHeader();
            VoorspellerORF voorspeller = new VoorspellerORF();
            idsORF = voorspeller.getIdsORF();
            infoORF = voorspeller.getInfoORF();

            if (!idsORF.isEmpty()) {
                infoTextAreaORF.append("INFORMATIE over ingeladen sequentie!\nheader:\t\t" + header + "\nsequentie\t\t" + sequentie + "\n" +
                                       "Aantal gevonden ORFs:\t" + idsORF.get(idsORF.size() - 1) + "\n\n\n"+
                                       "--------------------------------------------------------------------------\nINFORMATIE over gevonden ORFs!\n\n");

                String informatieORF = "";
                for (Object obj : infoORF) {
                    informatieORF = informatieORF + obj + "\n";
                }
                infoTextAreaORF.append(informatieORF);
                //buttons gaan worden enabled, je kan er nu weer op drukken.
                exportButtonORF.setEnabled(true);
                visualiseerButton.setEnabled(true);
                ophalenDatabaseButton.setEnabled(true);
            } else {
                infoTextAreaORF.append("Er zijn geen ORFs gevonden.");
            }
        } catch (GeenBestandIngevuld ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_openButtonActionPerformed

    /**
     *
     * @param evt Deze methode roept de export class aan. In deze class
     * exporteer je informatie naar de database. Wanneer dat gelukt is komt er
     * in de GUI Export: Done te staan.
     */
    private void exportButtonORFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportButtonORFActionPerformed
        Export export = new Export("jdbc:mysql://xirect.nl:3306/pg9", "pg9", "blaat1234");
        boolean complete = export.ORF(sequentie, header);
        if (complete == true) {
            doneExportLabel.setText("Export: Done!");
        } else {
            doneExportLabel.setText("Export: Something went wrong!");
        }
    }//GEN-LAST:event_exportButtonORFActionPerformed
    /**
     *
     * @param evt Deze class roept de tweede GUI showORF aan.
     */
    private void visualiseerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visualiseerButtonActionPerformed
        MainORF.mainORF();
        
    }//GEN-LAST:event_visualiseerButtonActionPerformed
    /**
     *
     * @param evt Deze methode roept de import class aan. In deze class
     * importeer je informatie uit de database. Wanneer dat gelukt is komt er
     * in de GUI de informatica te staan uit de database.
     */
    private void ophalenDatabaseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ophalenDatabaseButtonActionPerformed
        String acc_code = jTextField1.getText();
        if (acc_code.equals("")) {
            importArea.setText("No accession code given...");
        } else {
            importArea.setText("Importing...\n");
            Import imp = new Import("jdbc:mysql://xirect.nl:3306/pg9", "pg9", "blaat1234");
            ArrayList<String> orf_info = imp.run(acc_code);
            for (String temp : orf_info) {
                importArea.append(temp+"\n");
            }
            importArea.append("Done!");
        }
    }//GEN-LAST:event_ophalenDatabaseButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel doneExportLabel;
    private javax.swing.JButton exportButtonORF;
    private javax.swing.JLabel fileLabel;
    private javax.swing.JTextArea importArea;
    private javax.swing.JLabel importerenDatabase;
    private javax.swing.JTextArea infoTextAreaORF;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private java.awt.Label label1;
    private javax.swing.JButton openButton;
    private javax.swing.JButton ophalenDatabaseButton;
    private javax.swing.JTextField pathField;
    private javax.swing.JButton selectButton;
    private javax.swing.JLabel titelTool;
    private javax.swing.JButton visualiseerButton;
    // End of variables declaration//GEN-END:variables
}
